jQuery((function() { var e = luxon.DateTime;
    e.now().setZone("Asia/Jakarta"), e.now().setLocale("id"), $(document).on("change", "#changeTheme", (function(e) { $(this).is(":checked") ? console.log("mode terang") : console.log("mode gelap") })); var t = { chart: { fontFamily: "Quicksand, sans-serif", height: 365, type: "area", zoom: { enabled: !1 }, dropShadow: { enabled: !0, opacity: .3, blur: 5, left: -7, top: 22 }, toolbar: { show: !1 }, events: { click: function(e, t, a) { var o;
                        o = a.dataPointIndex, popupCenter({ url: route("viewInputFromChart", { indexData: o }), title: "Detail", w: 750, h: 700 }) } } }, colors: ["#1490cb"], dataLabels: { enabled: !1 }, noData: { text: "Loading Data", align: "center", verticalAlign: "middle", offsetX: 0, offsetY: 0, style: { color: "#ffffff", fontSize: "20px", fontFamily: "Quicksand, sans-serif" } }, stroke: { show: !0, curve: "smooth", width: 2, lineCap: "square" }, series: [{ name: "Total", data: [] }], xaxis: { axisBorder: { show: !1 }, axisTicks: { show: !1 }, crosshairs: { show: !0 }, labels: { offsetX: 0, offsetY: 0, style: { fontSize: "12px", fontFamily: "Quicksand, sans-serif", cssClass: "apexcharts-xaxis-title" } }, categories: [] }, yaxis: { labels: { formatter: function(e, t) { return Math.round(e) }, offsetX: -10, offsetY: 0, style: { fontSize: "12px", fontFamily: "Quicksand, sans-serif", cssClass: "apexcharts-yaxis-title" } } }, grid: { borderColor: "#191e3a", strokeDashArray: 5, xaxis: { lines: { show: !0 } }, yaxis: { lines: { show: !0 } }, padding: { top: 0, right: 0, bottom: 0, left: 10 } }, legend: { position: "top", horizontalAlign: "right", offsetY: -50, fontSize: "16px", fontFamily: "Quicksand, sans-serif", markers: { width: 10, height: 10, strokeWidth: 0, strokeColor: "#fff", fillColors: void 0, radius: 12, onClick: void 0, offsetX: 0, offsetY: 0 }, itemMargin: { horizontal: 0, vertical: 20 } }, tooltip: { theme: "dark", marker: { show: !0 }, x: { show: !1 } }, fill: { type: "gradient", gradient: { type: "vertical", shadeIntensity: 1, inverseColors: !1, opacityFrom: .28, opacityTo: .05, stops: [45, 100] } }, responsive: [{ breakpoint: 575, options: { legend: { offsetY: -30 } } }] },
        a = new ApexCharts(document.querySelector("#incoming_report"), t);

    function o() { var e;
        dashboardChartWithoutOperation = (e = route("dashboard_chart_without_operation"), respObj = $.ajax({ url: e, data: "", dataType: "json", type: "GET" }), respObj), dashboardChartWithoutOperation.done((function(e, t, o) { var i = e.rangeDate,
                s = e.totalPerDate,
                n = e.projectName,
                r = e.totalSum;
            _.isEmpty(i) || _.isEmpty(s) || ($("#projectName").html("" + n), a.updateOptions({ xaxis: { labels: { offsetX: 0, offsetY: 5, style: { fontSize: "12px", fontFamily: "Quicksand, sans-serif", cssClass: "apexcharts-xaxis-title" } }, categories: i } }), a.updateSeries([{ name: "Total", data: s }]), $(".data_total_laporan").html(r + " laporan")) })) }
    a.render(), $(document).on("change", "#pilihan_operasi", (function(e) { e.preventDefault(); var t = route("change_operation", $("#pilihan_operasi :selected").text());
        swal.queue([{ title: "Perbaharui Data?", confirmButtonText: "Ya", text: "Data akan ditampilkan secara otomatis", showLoaderOnConfirm: !0, preConfirm: function() { return fetch(t).then((function(e) { o(), swal.insertQueueStep({ type: "success", text: "Data grafik berhasil diperbaharui" }) })).then((function(e) {})).catch((function() { swal.insertQueueStep({ type: "error", title: "Gagal memuat data terbaru. Silakan refresh halaman secara manual" }) })) } }]) })), setInterval((function() { o() }), $("meta[name=reload_time]").attr("content")), $("#pilihan_operasi option[value=" + $("#pilihan_operasi_flag").val() + "]").attr("selected", "selected") }));